DELIMITER $$
CREATE PROCEDURE API1(IN C varchar(50), IN T varchar(50), IN P varchar(50))
BEGIN
call checkTime(T, @t);
    if (@t in (select distinct timestamp from oldpenna)) then
		if (P in (select distinct precinct from oldpenna)) then 
			if C = 'Biden' then
				select concat((select Biden from oldpenna where timestamp = @t and precinct = P)) as result;
			elseif C = 'Trump' then
				select concat((select Trump from oldpenna where timestamp = @t and precinct = P)) as result;
			else
				select concat('incorrect candidate') as result;
            end if;
		else
			select concat('incorrect precinct') as result;
		end if;
	else
		select concat('incorrect timestamp') as result;
	end if;
END; $$
DELIMITER ;





DELIMITER $$
CREATE PROCEDURE API2(IN date varchar(50), out candidate varchar(50))
BEGIN
declare votes_Biden int default 0;
declare votes_Trump int default 0;
	call checkTime(date, @t);
    if @t = 'incorrect timestamp' then
		set candidate = @t;
	elseif @t = '0' then
		set candidate = 'incorrect timestamp';
	else
		set votes_Biden = (select sum(Biden) from Penna where timestamp = @t);
        set votes_Trump = (select sum(Trump) from Penna where timestamp = @t);
        if (votes_Biden > votes_Trump) then
			set candidate = "Biden";
		elseif(votes_Biden < votes_Trump) then
			set candidate = "Trump";
		else
			set candidate = "tied";
		end if;
    end if;
END; $$
DELIMITER ;





DELIMITER $$
CREATE PROCEDURE API3(IN C varchar(50))
BEGIN
	If C = "Biden" then
		select precinct from 	(select *, Biden / totalvotes as percentage 
								from Penna 
								where timestamp = (select max(Timestamp) from Penna) and Biden > Trump 
								order by percentage desc limit 10) a;
	elseif C = "Trump" then
		select precinct from 	(select precinct, Trump / totalvotes as percentage 
								from Penna 
								where timestamp = (select max(Timestamp) from Penna) and Trump > Biden 
								order by percentage desc limit 10) a;
	else
		select concat("incorrect candidate") as error;
    end if;
END; $$
DELIMITER ;





DELIMITER $$
CREATE PROCEDURE API4(IN P varchar(50))
BEGIN
declare total int default 0;
call getVotesBiden('2020-11-11 21:50:46', P, @vb);
call getVotesTrump('2020-11-11 21:50:46', P, @vt);
	if P in (select distinct precinct from Penna) then
		set total = (select totalvotes from Penna where timestamp = (select max(Timestamp) from Penna) and precinct = P);
        if(@vb > @vt) then
			select concat("Biden won ", "with %", (@vb/total) * 100, " of the votes") as result;
		elseif (@vt > @vb) then
			select concat("Trump won ", "with %", (@vt/total) * 100, " of the votes") as result;
		else
			select concat("the votes are equal") as result;
        end if;
    else
		select concat("incorrect candidate") as error;
    end if;
END; $$
DELIMITER ;





DELIMITER $$
CREATE PROCEDURE API5(IN s varchar(50))
BEGIN
declare Trump_votes int default 0;
declare Biden_votes int default 0;
	if (select count(*) from Penna where timestamp = (select max(Timestamp) from Penna) and locate(s, precinct) > 0) > 0 then
		set Trump_votes = (select sum(Trump) from Penna where timestamp = (select max(Timestamp) from Penna) and locate(s, precinct) > 0);
		set Biden_votes = (select sum(Biden) from Penna where timestamp = (select max(Timestamp) from Penna) and locate(s, precinct) > 0);
        if (Trump_votes > Biden_votes) then
			select concat("Trump won with ", Trump_votes, " votes in union of precincts which have '", s, "' in their name") as result;
		elseif (Trump_votes < Biden_votes) then
			select concat("Biden won with ", Biden_votes, " votes in union of precincts which have '", s, "' in their name") as result;
		else
			select concat("votes were tied") as result;
        end if;
    else
		select concat("this string is not found in any precincts") as result;
    end if;
END; $$
DELIMITER ;





DELIMITER $$
CREATE PROCEDURE checkTime(IN T varchar(50), out T1 varchar(50))
BEGIN
    IF T not like '____-__-__%' THEN
		set T1 = "incorrect timestamp";
    ELSEIF T > (Select distinct SUBSTRING_INDEX(SUBSTRING_INDEX(timestamp, ':', 2), ' ', 1) from Penna order by timestamp desc limit 1) THEN
		set T1 = (Select distinct timestamp from Penna order by timestamp desc limit 1);
	ELSEIF T < (Select distinct SUBSTRING_INDEX(SUBSTRING_INDEX(timestamp, ':', 2), ' ', 1) from Penna order by timestamp asc limit 1) THEN
		set T1 = '0';
	ELSE
		set T1 = (Select distinct timestamp from Penna where SUBSTRING_INDEX(SUBSTRING_INDEX(timestamp, ':', 2), ' ', 1) = T order by timestamp desc limit 1);
	end if;
END; $$
DELIMITER ;





DELIMITER $$
CREATE PROCEDURE getVotesBiden(IN T varchar(50), IN P varchar(50), out votes int)
BEGIN
	set votes = (select Biden from Penna where timestamp = T and precinct = P);
END; $$
DELIMITER ;






DELIMITER $$
CREATE PROCEDURE getVotesTrump(IN T varchar(50), IN P varchar(50), out votes int)
BEGIN
	set votes = (select Trump from Penna where timestamp = T and precinct = P);
END; $$
DELIMITER ;





DELIMITER $$
CREATE PROCEDURE 3a()
BEGIN
	if (select EXISTS (select * from Penna where totalvotes < Biden + Trump) as violations) = 0 then
		select concat("no violations") as result;
	else
		select concat("there is an instance where totalvotes < (trump + biden)") as result;
    end if;
END; $$
DELIMITER ;





DELIMITER $$
CREATE PROCEDURE newPenna()
BEGIN
declare p varchar(50) default "";
declare t varchar(50) default "";
declare prevt varchar(50) default "";
declare nv int default 0;
declare nb int default 0;
declare nt int default 0;
declare numP int default 0;
declare numT int default 0;
	create table newPenna1
    (
		Precinct varchar(50),
        timestamp datetime,
        newvotes int, 
        new_Biden int,
        new_Trump int
    );
	
    a: loop
		set p = (select distinct precinct from Penna limit numP, 1);
        b: loop
			set t = (select distinct timestamp from Penna limit numT, 1);
			if (exists (select distinct timestamp from Penna where timestamp < t order by timestamp desc limit 1)) then
				set prevt = (select distinct timestamp from Penna where timestamp < t order by timestamp desc limit 1);
			else
				set prevt = t;
			end if;
            if (0 = (select count(*) from Penna where timestamp = t and precinct = p)) then
				set numT = numT +1;
                iterate b ;
            end if;
            set nv = (select totalvotes from Penna where precinct = p and timestamp = t) - (select totalvotes from Penna where precinct = p and timestamp = prevt);
			set nb = (select Biden from Penna where precinct = p and timestamp = t) - (select Biden from Penna where precinct = p and timestamp = prevt);
			set nt = (select Trump from Penna where precinct = p and timestamp = t) - (select Trump from Penna where precinct = p and timestamp = prevt);
			insert into newPenna1(Precinct, timestamp, newvotes, new_Biden, new_Trump) values (p, t, nv, nb, nt);
			set numT = numT +1;
			if (numT = (select count(distinct timestamp) from Penna)) then
				leave b;
			end if;
        end loop;
        set numT = 0;
        set numP = numP +1;
		if (numP = (select count(distinct precinct) from Penna)) then
				leave a;
		end if;
    end loop;
END; $$
DELIMITER ;





DELIMITER $$
CREATE PROCEDURE newPenna()
begin
declare oldp varchar(50) default "";
declare newp varchar(50) default "";
declare t varchar(50) default "";
declare prevt varchar(50) default "";
declare oldv int default 0;
declare oldb int default 0;
declare oldt int default 0;     
declare newv int default 0;
declare newb int default 0;
declare newt int default 0;
DECLARE finished INTEGER DEFAULT 0;
declare Tcursor cursor for select timestamp, precinct, totalvotes, biden, trump from Penna order by precinct, timestamp;
declare Tcursor2 cursor for select timestamp, precinct, totalvotes, biden, trump from Penna order by precinct, timestamp;
DECLARE CONTINUE HANDLER 
        FOR NOT FOUND SET finished = 1;
	create table newPenna
    (
		Precinct varchar(50),
        timestamp datetime,
        newvotes int, 
        new_Biden int,
        new_Trump int
    );

    open Tcursor;
    open Tcursor2;
    fetch Tcursor2 into t, newp, newv, newb, newt;
    a: loop
		fetch Tcursor into prevt, oldp, oldv, oldb, oldt;
		fetch Tcursor2 into t, newp, newv, newb, newt;
        if finished = 1 then
			leave a;
		end if;
        if (newp = oldp) then
			insert into newPenna(Precinct, timestamp, newvotes, new_Biden, new_Trump) values (newp, t, newv-oldv, newb-oldb, newt-oldt);
        end if;
	end loop a;
	CLOSE Tcursor;
    CLOSE Tcursor2;
end;$$
DELIMITER ;





DELIMITER $$
CREATE PROCEDURE switch()
begin
declare oldp varchar(50) default "";
declare newp varchar(50) default "";
declare t varchar(50) default "";
declare prevt varchar(50) default "";
declare oldv int default 0;
declare oldb int default 0;
declare oldt int default 0;     
declare newv int default 0;
declare newb int default 0;
declare newt int default 0;
DECLARE finished INTEGER DEFAULT 0;
declare Tcursor cursor for select timestamp, precinct, totalvotes, biden, trump from Penna  order by precinct, timestamp;
declare Tcursor2 cursor for select timestamp, precinct, totalvotes, biden, trump from Penna  order by precinct, timestamp;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;
	create table switch
    (
		Precinct varchar(50),
        timestamp datetime,
        fromCandidate varchar(5), 
		toCandidate varchar(5)
    );
	
    open Tcursor;
    open Tcursor2;
    fetch Tcursor2 into t, newp, newv, newb, newt;
    a: loop
		fetch Tcursor into prevt, oldp, oldv, oldb, oldt;
		fetch Tcursor2 into t, newp, newv, newb, newt;
        if finished = 1 then
			leave a;
		end if;
        if (newp = oldp) then
			if (oldt > oldb and newt < newb) then
				insert into switch(Precinct, timestamp, fromCandidate, toCandidate) values (newp, t, "Trump", "Biden");
			elseif (oldb > oldt and newb < newt ) then
				insert into switch(Precinct, timestamp, fromCandidate, toCandidate) values (newp, t, "Biden", "Trump");
            end if;
        end if;
	end loop a;
	CLOSE Tcursor;
    CLOSE Tcursor2;
end;$$
DELIMITER ;





DELIMITER $$
CREATE PROCEDURE moveVotes(IN p varchar(50), in t varchar(50), in candidate varchar(50), in votes int)
BEGIN
    if (p not in (select distinct precinct from oldpenna)) then
		select concat("incorrect precinct") as result;
	else
		if (t not in (select distinct timestamp from oldpenna)) then
			select concat("incorrect timestamp") as result;
		else
			if votes < 1 then
				select concat("please enter a positive numebr of votes") as result;
			else
				if (candidate = "biden") then
					set @B = (select Biden from penna where timestamp = t and precinct = p);
					if (@B >= votes) then
						update penna set Biden = Biden - votes, Trump = Trump + votes where precinct = p and timestamp >= t;
					else
						select concat("Biden doesn't have enough votes to move") as result;
					end if;
				elseif (candidate = "trump") then
					set @T = (select Trump from penna where timestamp = t and precinct = p);
					if (@T >= votes) then
						update penna set Trump = Trump - votes, Biden = Biden + votes where precinct = p and timestamp >= t;
					else
						select concat("Trump doesn't have enough votes to move") as result;
					end if;
				else
					select concat ("incorrect candidate") as result;
				end if;
			end if;
		end if;
    end if;
END; $$
DELIMITER ;


